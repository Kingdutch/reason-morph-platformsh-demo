# This file describes an application. You can have multiple applications
# in the same project.

# The name of this app. Must be unique within a project.
name: open-social-chatserver

# The type of the application to build.
type: nodejs:14
build:
  flavor: none
dependencies:
  nodejs:
    esy: '^0.6.6'
    pesy: '0.5.0-alpha.20'

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
# relationships:
#   database: "mysqldb:mysql"

# The configuration of app when it is exposed to the web.
web:
  commands:
    start: MorphPlaygroundApp.exe

# The size of the persistent disk of the application (in MB).
# esy requires a lot of disk space in /app/.esy so we provide it.
disk: 5120

# The hooks that will be performed when the package is deployed.
hooks:
    # Clear out previous large build artifacts (but not cached dependencies).
    # Remove the previous binary and start a background task to keep build
    # artifacts clean when no longer needed. This should fix disk space issues
    # during build time.
    # Then install all needed things and build it.
    # We use npm to pack everything up and install it as a global executable
    # this ensures that the environment is present for the executable to find 
    # all needed libraries and we don't require starting esy which causes issues.
    build: |
        set -e
        export ESY__PREFIX=$PLATFORM_CACHE_DIR/.esy
        rm -rf $ESY__PREFIX/3/b
        rm -rf "_release"
        rm -f .build_killswitch
        while [ ! -f "_release/bin/MorphPlaygroundApp.exe" ] && [ ! -f ".build_killswitch" ]; do sleep 1; for s in $ESY__PREFIX/3/b/*; do [ "$(echo $s* | tr " " "\n" | wc -l)" -eq "3" ] && echo Removing $s* && rm -rf $s*; done; done &
        esy install
        esy release || (echo $? > .build_killswitch && exit $(cat .build_killswitch))
        cd _release
        npm pack
        npm install -g *.tgz
